==================================================================================================================================
QUERY BUILDER
==================================================================================================================================
✔ where @done (19-07-07 23:33)
✔ {column}_in @done (19-07-07 23:33)  
✔ {column}_is @done (19-07-07 23:33)
✔ {column}_not @done (19-07-07 23:33)  
✔ {column}_not_in @done (19-07-07 23:33)  
✔ {column}_between @done (19-07-07 23:33)
✔ {column}_greater @done (19-07-07 23:33)
✔ {column}_lesser @done (19-07-07 23:33)  
✔ {column}_begins_with @done (19-07-07 23:33)
✔ {column}_contains @done (19-07-07 23:33)
✔ {column}_ends_with @done (19-07-07 23:33)  
✔ {column}_matches @done (19-07-07 23:33)  
✔ {column}_sounds_like @done (19-07-07 23:33)

✔ limit @done (19-07-07 23:34)  
✔ order @done (19-07-07 23:34)

✔ join_{table} @done (19-07-07 23:34)
✔ {left}_join_{table} @done (19-07-07 23:34)
✔ {right}_join_{table} @done (19-07-07 23:34)
✔ {cross}_join_{table} @done (19-07-07 23:34)
✔ {inner}_join_{table} @done (19-07-07 23:36)

☐ count
☐ group
☐ having
☐ or
☐ and

SPEED
==================================================================================================================================

Speed is an MVC (iMVC/IDM*) PHP web application development framework.

iMVC is an Intrinsic Dynamic Modeling (IDM) feature that also supports file-based models.
The query builder is part of the IDM feature and adopts a natural language (English) syntax for writing queries.
Speed has a strong two-step data validation feature that  
Speed has an XML-based embedded templating system that is super easy to learn and adopt.

REQUIREMENTS
==================================================================================================================================
-  Apache 2.2 or higher
-  PHP 5.6 or higher
   - JSON support
   - mysqli extension
   - SimpleXML extension
   - DomDocument support
-  MariaDB 10 or higher

SPEED FEATURES
==================================================================================================================================
-  iMVC with IDM (improved MCV with Instrinsic Dynamic Modelling) lets you write models anywhere as and when required, without a
   rigid file-based model definition. IDM also supports file-based models, but is less dynamic and more prone to issues.
   Models are loaded and cached to prevent the IDM from negatively impacting performance whilst delivering the dynamism required. 

-  IDM uses a unique strategy that makes all models automatically aware of their parent schema and external relationships.

-  Simple to use query builder that follows natural language and logic, with automatic foreign data ssociations.

-  A two-step data validation that ensures sanitized and strictly enforced data types. Data is validated against the schema
   definition, then may also be validated against a custom set of rules for each use case. 

-  CSRF protection in one easy step, with custom functions for form handilng and submission.

-  XML-based layout views and partials make building UIs easy and fast. Binding data to the view takes just a few steps,
   usually between 1 and 3 easy steps. The strategy adopted leaves a clean view and ensures a standard-compliant layout. 

-  Speed features Activate, a custom jQuery extension for markup based AJAXing in a few easy steps. Activate also exposes
   PHP data in the DOM for use in JS functionality.

-  F7 CMS for managing content and access control. F7 itself is quick to deploy and has a simple and easy to use interface.
   The UI of a simple F7-powered CMS could be setup within minutes, using a modular and extensible XML structure. 


==================================================================================================================================
ROUTING
==================================================================================================================================

==================================================================================================================================
TEMPLATING
==================================================================================================================================
-  Speed uses pure XML templates aka layouts. Parsing will fail if views are not XML compliant.
-  The identity attribute is used to register (attach) data to a view or a partial from a controller
-  The repeat attribute determines how many rows of data to select for parsing a snippet
-  The select attribute picks a data node object from a complex dataset and returns same to the repeater
   function for processing a snippet
-  Mark a data token with ${field} to substitute for value of ->field in a snippet
-  To automatically bind a snippet to data supplied by F7 bindings, set the identity to the binding ID 
   and add the attribute prse, set to auto 

==================================================================================================================================
SECURITY
==================================================================================================================================

==================================================================================================================================
CMS
==================================================================================================================================

==================================================================================================================================
CONFIG
==================================================================================================================================

==================================================================================================================================
ERROR HANDLING
==================================================================================================================================

==================================================================================================================================
DATABASE ADAPTORS
==================================================================================================================================

